// <auto-generated />
using System;
using CarRegistration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRegistration.Migrations
{
    [DbContext(typeof(CarRegistrationContext))]
    [Migration("20221125154808_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("CarRegistration.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CarManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarManufacturerId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CarManufacturerId = 1L,
                            Name = "VW"
                        },
                        new
                        {
                            Id = 2L,
                            CarManufacturerId = 1L,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 3L,
                            CarManufacturerId = 1L,
                            Name = "Skoda"
                        },
                        new
                        {
                            Id = 4L,
                            CarManufacturerId = 1L,
                            Name = "Mercedes-Benz"
                        },
                        new
                        {
                            Id = 5L,
                            CarManufacturerId = 1L,
                            Name = "Toyota"
                        });
                });

            modelBuilder.Entity("CarRegistration.Car", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InitialRegistrationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("MakeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BodyType = "4-doors",
                            Color = "Blue",
                            InitialRegistrationDate = new DateTime(2011, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LicensePlate = "3-DGP-63",
                            MakeId = 5L,
                            Model = "Aygo",
                            Power = 53,
                            VIN = "4Y1SL65848Z411439"
                        });
                });

            modelBuilder.Entity("CarRegistration.CarManufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FoundingYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarManufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Chinastreet 1",
                            FoundingYear = 1973,
                            Name = "Big manufacturer",
                            PhoneNumber = "+86-13910998888"
                        });
                });

            modelBuilder.Entity("CarRegistration.Brand", b =>
                {
                    b.HasOne("CarRegistration.CarManufacturer", "CarManufacturer")
                        .WithMany("Brand")
                        .HasForeignKey("CarManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarManufacturer");
                });

            modelBuilder.Entity("CarRegistration.Car", b =>
                {
                    b.HasOne("CarRegistration.Brand", "Make")
                        .WithMany()
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("CarRegistration.CarManufacturer", b =>
                {
                    b.Navigation("Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
